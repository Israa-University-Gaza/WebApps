@using IsraaSystem.Application.Helper
@model IsraaSystem.Application.Repository.import.ImportDto
@{
  Layout = null;
}

<div id="Edit-Import" class="modal-content">
  @{
    AjaxOptions opt = new AjaxOptions
    {
      InsertionMode = InsertionMode.ReplaceWith,
      HttpMethod = "POST",
      UpdateTargetId = "Edit-Import",
      OnSuccess = "ModelHideFormSubmit"
    };
  }
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">تعديل </h4>
  </div>
  <div class="modal-body modal-form">
    <div class="portlet-body form">
      @using (Ajax.BeginForm("Edit", "Import", opt, new { @class = "form-horizontal" }))
      {
        @Html.Partial("_Alerts")
        @Html.AntiForgeryToken()
        <div class="form-body">

            <div class="form-group">
                <label class="col-md-3 control-label">اسم الصنف</label>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.MaterialId, DropDownHelpper.Materials(), "اختر الصنف", new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(model => model.MaterialId, "", new { @class = "text-danger help-block" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-3 control-label">مورد الصنف</label>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.SupplierId, DropDownHelpper.Suppliers(), "اختر المورد", new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger help-block" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-3 control-label">الكمية</label>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger help-block" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-3 control-label">السعر</label>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.QuantityPrice, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.QuantityPrice, "", new { @class = "text-danger help-block" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-3 control-label">تاريخ التوريد</label>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.DateOfImport, new { @class = "form-control date-picker" })
                    @Html.ValidationMessageFor(model => model.DateOfImport, "", new { @class = "text-danger help-block" })
                </div>
            </div>
          <div class="form-group">
            <label class="col-md-3 control-label">فعال</label>
            <div class="col-md-8">
              @Html.CheckBoxFor(model => model.IsActive, new { @data_toggle = "toggle", @class = "toggle-checkbox" })
            </div>
          </div>
        </div>
        <div class="form-actions">
          <div class="row">
            <div class="col-md-offset-3 col-md-8">

              <input id="submit" type="submit" class="btn btn-primary" value="حفظ">
              <button type="button" class="btn btn-danger" data-dismiss="modal">إلغاء</button>

            </div>
          </div>
        </div>
      }
    </div>
  </div>

</div>


<script>
    $(function () {

        $('.toggle-checkbox').bootstrapToggle();
        $('.optgroup').multiSelect({
            selectableOptgroup: true,
            selectableHeader: "<div class='custom-header'>الخيارات</div>",
            selectionHeader: "<div class='custom-header'>العناصر المختارة</div>"

        });


        $('.searchable').multiSelect({
            selectableHeader: "<input type='text' class='form-control' autocomplete='off' placeholder='بحث ..'>",
            selectionHeader: "<input type='text' class='form-control' autocomplete='off' placeholder='بحث ..'>",
            afterInit: function (ms) {
                var that = this,
                    $selectableSearch = that.$selectableUl.prev(),
                    $selectionSearch = that.$selectionUl.prev(),
                    selectableSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selectable:not(.ms-selected)',
                    selectionSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selection.ms-selected';

                that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                    .on('keydown', function (e) {
                        if (e.which === 40) {
                            that.$selectableUl.focus();
                            return false;
                        }
                    });

                that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                    .on('keydown', function (e) {
                        if (e.which == 40) {
                            that.$selectionUl.focus();
                            return false;
                        }
                    });
            },
            afterSelect: function () {
                this.qs1.cache();
                this.qs2.cache();
            },
            afterDeselect: function () {
                this.qs1.cache();
                this.qs2.cache();
            }
        });




    });

    function ModelHideFormSubmit() {
        $('.modal').modal('hide');

    }

    $(document).ready(function () {
       
        $('.date-picker').datepicker();

    });

</script>
