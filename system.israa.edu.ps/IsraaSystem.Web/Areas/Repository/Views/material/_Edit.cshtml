@using IsraaSystem.Application.Helper
@model IsraaSystem.Application.Repository.material.MaterialDto
@{
    Layout = null;
}

<div id="Edit-Material" class="modal-content">
    @{
        AjaxOptions opt = new AjaxOptions
        {
            InsertionMode = InsertionMode.ReplaceWith,
            HttpMethod = "POST",
            UpdateTargetId = "Edit-Material",
            OnSuccess = "ModelHideFormSubmit"
        };
    }
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">تعديل صنف</h4>
    </div>
    <div class="modal-body modal-form">
        <div class="portlet-body form">
            @using (Ajax.BeginForm("Edit", "Material", opt, new { @class = "form-horizontal" }))
            {
                @Html.Partial("_Alerts")
                @Html.AntiForgeryToken()
                <div class="form-body">

                    <div class="form-group">
                        <label class="col-md-3 control-label">كود الصنف</label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.Code, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">اسم الصنف</label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">تصنيف الصنف</label>
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.TypeID, DropDownHelpper.MaterialType(), "اختر التصنيف", new { @class = "form-control select2" })
                            @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "text-danger help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">وحدة الصنف</label>
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.UnitId, DropDownHelpper.MaterialUnit(), "اختر الوحدة", new { @class = "form-control select2" })
                            @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger help-block" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-3 control-label">سعر الوحدة</label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">حد الطلب</label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.RequestLimit, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RequestLimit, "", new { @class = "text-danger help-block" })
                        </div>
                    </div>
                    <div id="Expir" class="form-group">
                        <label class="col-md-3 control-label">تنبيه انتهاء الصلاحية قبل </label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.WarningBeforExpir, new { @class = "form-control", @placeholder = "يوم" })
                            @Html.ValidationMessageFor(model => model.WarningBeforExpir, "", new { @class = "text-danger help-block" })
                        </div>
                    </div>



                    <div class="form-group">
                        <label class="col-md-3 control-label">فعال</label>
                        <div class="col-md-8">
                            @Html.CheckBoxFor(model => model.IsActive, new { @data_toggle = "toggle", @class = "toggle-checkbox" })
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="row">
                        <div class="col-md-offset-3 col-md-8">

                            <input id="submit" type="submit" class="btn btn-primary" value="حفظ">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">إلغاء</button>

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

</div>


<script>
    $.validator.unobtrusive.parse($("form"));

    $(function () {

        $('.toggle-checkbox').bootstrapToggle();
        $('.optgroup').multiSelect({
            selectableOptgroup: true,
            selectableHeader: "<div class='custom-header'>الخيارات</div>",
            selectionHeader: "<div class='custom-header'>العناصر المختارة</div>"

        });


        $('.searchable').multiSelect({
            selectableHeader: "<input type='text' class='form-control' autocomplete='off' placeholder='بحث ..'>",
            selectionHeader: "<input type='text' class='form-control' autocomplete='off' placeholder='بحث ..'>",
            afterInit: function (ms) {
                var that = this,
                    $selectableSearch = that.$selectableUl.prev(),
                    $selectionSearch = that.$selectionUl.prev(),
                    selectableSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selectable:not(.ms-selected)',
                    selectionSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selection.ms-selected';

                that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                    .on('keydown', function (e) {
                        if (e.which === 40) {
                            that.$selectableUl.focus();
                            return false;
                        }
                    });

                that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                    .on('keydown', function (e) {
                        if (e.which == 40) {
                            that.$selectionUl.focus();
                            return false;
                        }
                    });
            },
            afterSelect: function () {
                this.qs1.cache();
                this.qs2.cache();
            },
            afterDeselect: function () {
                this.qs1.cache();
                this.qs2.cache();
            }
        });




    });

    function ModelHideFormSubmit() {
        $('.modal').modal('hide');

    }


</script>
