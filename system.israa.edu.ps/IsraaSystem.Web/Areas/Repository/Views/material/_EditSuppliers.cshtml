@using IsraaSystem.Application.Helper
@model IsraaSystem.Application.Repository.material.MaterialDto
@{
    Layout = null;
}

<div id="Edit-Material" class="modal-content">
    @{
        var opt = new AjaxOptions
        {
            InsertionMode = InsertionMode.ReplaceWith,
            HttpMethod = "POST",
            UpdateTargetId = "Edit-Material",
            OnSuccess = "ModelHideFormSubmit"
        };
    }
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title">
            تعديل صنف
            <small> @Html.DisplayFor(x => x.Name)</small>
        </h4>
    </div>
    <div class="modal-body modal-form">
        <div class="portlet-body form">
            @using (Ajax.BeginForm("EditSuppliers", "Material", opt, new {@class = "form-horizontal"}))
            {
                @Html.Partial("_Alerts")
                @Html.AntiForgeryToken()
                <div class="form-body">


                    <div class="form-group">
                        <label class="col-md-3 control-label">الموردون</label>
                        <div class="col-md-8">
                            <select class='searchable' name="Suppliers" multiple='multiple'>
                                @foreach (var item in DropDownHelpper.Suppliers())
                                {
                                    if (Model.Supplier != null && Model.Supplier.Any(x => x.Id == Convert.ToInt32(item.Value)))
                                    {
                                        <option selected value=@item.Value>@item.Text</option>
                                    }
                                    else
                                    {
                                        <option value=@item.Value>@item.Text</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                </div>


                <div class="form-actions">
                    <div class="row">
                        <div class="col-md-offset-3 col-md-8">

                            <input id="submit" type="submit" class="btn btn-primary" value="حفظ">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">إلغاء</button>

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

</div>


<script>
    $.validator.unobtrusive.parse($("form"));

    $(function() {

        $('.toggle-checkbox').bootstrapToggle();
        $('.optgroup').multiSelect({
            selectableOptgroup: true,
            selectableHeader: "<div class='custom-header'>الخيارات</div>",
            selectionHeader: "<div class='custom-header'>العناصر المختارة</div>"

        });


        $('.searchable').multiSelect({
            selectableHeader: "<input type='text' class='form-control' autocomplete='off' placeholder='بحث ..'>",
            selectionHeader: "<input type='text' class='form-control' autocomplete='off' placeholder='بحث ..'>",
            afterInit: function(ms) {
                var that = this;
                const $selectableSearch = that.$selectableUl.prev();
                const $selectionSearch = that.$selectionUl.prev();
                const selectableSearchString = `#${that.$container.attr('id')} .ms-elem-selectable:not(.ms-selected)`;
                const selectionSearchString = `#${that.$container.attr('id')} .ms-elem-selection.ms-selected`;

                that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                    .on('keydown',
                        function(e) {
                            if (e.which === 40) {
                                that.$selectableUl.focus();
                                return false;
                            }
                        });

                that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                    .on('keydown',
                        function(e) {
                            if (e.which == 40) {
                                that.$selectionUl.focus();
                                return false;
                            }
                        });
            },
            afterSelect: function() {
                this.qs1.cache();
                this.qs2.cache();
            },
            afterDeselect: function() {
                this.qs1.cache();
                this.qs2.cache();
            }
        });


    });

    function ModelHideFormSubmit() {
        $('.modal').modal('hide');

    }


</script>
