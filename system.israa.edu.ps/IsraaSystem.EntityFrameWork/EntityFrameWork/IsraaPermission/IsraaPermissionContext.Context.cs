//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IsraaSystem.DataAccess.EntityFrameWork.IsraaPermission
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IsraPermissionEntities : DbContext
    {
        public IsraPermissionEntities()
            : base("name=IsraPermissionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Area> Area { get; set; }
        public virtual DbSet<Controller> Controller { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<EmployeeArea> EmployeeArea { get; set; }
        public virtual DbSet<EmployeeRole> EmployeeRole { get; set; }
        public virtual DbSet<Permission> Permission { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<RolePermission> RolePermission { get; set; }
        public virtual DbSet<PermissionJob> PermissionJob { get; set; }
    
        public virtual ObjectResult<GetFillterdObserver_Output> GetFillterdObserver(Nullable<int> employmentTypeID, Nullable<int> branchID)
        {
            var employmentTypeIDParameter = employmentTypeID.HasValue ?
                new ObjectParameter("EmploymentTypeID", employmentTypeID) :
                new ObjectParameter("EmploymentTypeID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFillterdObserver_Output>("GetFillterdObserver", employmentTypeIDParameter, branchIDParameter);
        }
    }
}
